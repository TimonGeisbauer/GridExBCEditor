use ::BBjGridExWidget/GxCellEditors.bbj::GxCellEditorSuggestionResolver
use ::BBjGridExWidget/GxCellEditors.bbj::GxCellEditorSuggestion

use com.basiscomponents.bc.SqlTableBC
use com.basiscomponents.bc.BusinessComponent

class public SQLResolver extends GxCellEditorSuggestionResolver

    field private SqlTableBC bc!
    field private BBjString table!
    field private BBjString primaryKey!

    method public SQLResolver(BusinessComponent bc!, BBjString table!, BBjString primaryKey!)
        #bc! = cast(SqlTableBC,bc!)
        #table! = table!
        #primaryKey! = primaryKey!
    methodend

    method public void doResolve(BBjString term!)
        search! = "%" + term! + "%"

        query! = ""
        query! = query! + "SELECT"
        query! = query! + "    `DESC` ,"
        query! = query! + "    %s "
        query! = query! + "FROM "
        query! = query! +  "%s " 
        query! = query! + "WHERE"
        query! = query! + "    `DESC` LIKE " 
        query! = query! + "'%s%%'"
        query! = query! + " OR"
        query! = query! + "    %s LIKE " 
        query! = query! + "'%s%%'"

        query! = String.format(query!,#primaryKey!,#table!,search!,#primaryKey!,search!)

        #bc!.setRetrieveSql(query!)

        rs! = #bc!.retrieve(err=error)

        if(rs! <> null() and rs!.count() > 0)
            
            for i = 0 to rs!.size() -1
                dr! = rs!.get(i)
                value! = dr!.getFieldAsString(#primaryKey!)
                label! = value! + " - " + dr!.getFieldAsString("DESC")

                #addItem(label!, value!)
            next i
        endif

        methodret

        error:
            #addItem("Failed to query Lookup Data","")
        methodret
    methodend
classend