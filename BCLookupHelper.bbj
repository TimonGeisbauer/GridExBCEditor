use ::BBjGridExWidget/GxCellEditors.bbj::GxCellEditorRichSelect
use ::BBjGridExWidget/GxCellEditors.bbj::GxCellEditorSelect
use ::BBjGridExWidget/GxCellEditors.bbj::GxCellEditorSuggestion

use com.basiscomponents.db.ResultSet
use com.basiscomponents.db.DataRow
use com.basiscomponents.db.DataField

use com.google.gson.JsonArray

use com.basiscomponents.bc.BusinessComponent

use ::SQLResolver.bbj::SQLResolver
use ::LuceneResolver.bbj::LuceneResolver

use java.util.UUID

class public BCLookupHelper 

    field private BusinessComponent bc!

    method public BCLookupHelper(BusinessComponent bc!)
        #bc! = bc!
    methodend

    rem search for primary key
    rem look for a desc field and use that

    rem if we find a _search/or a %search in the attr
    rem we use the custom filter thing and we also need
    rem to create a virtual column with primary key - desc 
    rem and ask hyyan if we can have a onKeypressed and stuff to implement
    rem a search like in the timesheets
    method public GxCellEditorSuggestion buildSuggestions(BBjString table!)
        declare GxCellEditorSuggestion suggestionEditor!

        columnDefinitions! = #bc!.getAttributesRecord()
            
        for i = 0 to columnDefinitions!.getColumnCount() -1
            name! = columnDefinitions!.getColumnName(i) 
            field! = columnDefinitions!.getField(name!)
            attr! = field!.getAttributes()

            if(num(attr!.get("EDITABLE")) = 2 ) then 
                primaryKeyField! = name!
                break
            endif
        next i

        uniqueID! = UUID.randomUUID().toString()
        if (attr!.get("%SEARCH") = null()) then 
            suggestionEditor! = new GxCellEditorSuggestion(uniqueID!, new SQLResolver(#bc!,table!,primaryKeyField!))
        else
            suggestionEditor! = new GxCellEditorSuggestion(uniqueID!, new LuceneResolver())
        endif

        suggestionEditor!.setEmptyMessage("No match found")
        suggestionEditor!.setShowOnFocus(1)

        methodret suggestionEditor!
    methodend
classend